//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace Pinble_Chipped.localhost {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WebChippedSoap", Namespace="http://tempuri.org/")]
    public partial class WebChipped : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;
        
        private System.Threading.SendOrPostCallback addChippedOperationCompleted;
        
        private System.Threading.SendOrPostCallback shareNumOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChippedAddOperationCompleted;
        
        private System.Threading.SendOrPostCallback usernameOperationCompleted;
        
        private System.Threading.SendOrPostCallback BindListOperationCompleted;
        
        private System.Threading.SendOrPostCallback BindList_ppOperationCompleted;
        
        private System.Threading.SendOrPostCallback BindList_AttentionOperationCompleted;
        
        private System.Threading.SendOrPostCallback TrackingOrdersOperationCompleted;
        
        private System.Threading.SendOrPostCallback isomuxOperationCompleted;
        
        private System.Threading.SendOrPostCallback AttentionOperationCompleted;
        
        private System.Threading.SendOrPostCallback TrackingExcOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddTrackingOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WebChipped() {
            this.Url = global::Pinble_Chipped.Properties.Settings.Default.Pinble_Chipped_localhost_WebChipped;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;
        
        /// <remarks/>
        public event addChippedCompletedEventHandler addChippedCompleted;
        
        /// <remarks/>
        public event shareNumCompletedEventHandler shareNumCompleted;
        
        /// <remarks/>
        public event ChippedAddCompletedEventHandler ChippedAddCompleted;
        
        /// <remarks/>
        public event usernameCompletedEventHandler usernameCompleted;
        
        /// <remarks/>
        public event BindListCompletedEventHandler BindListCompleted;
        
        /// <remarks/>
        public event BindList_ppCompletedEventHandler BindList_ppCompleted;
        
        /// <remarks/>
        public event BindList_AttentionCompletedEventHandler BindList_AttentionCompleted;
        
        /// <remarks/>
        public event TrackingOrdersCompletedEventHandler TrackingOrdersCompleted;
        
        /// <remarks/>
        public event isomuxCompletedEventHandler isomuxCompleted;
        
        /// <remarks/>
        public event AttentionCompletedEventHandler AttentionCompleted;
        
        /// <remarks/>
        public event TrackingExcCompletedEventHandler TrackingExcCompleted;
        
        /// <remarks/>
        public event AddTrackingCompletedEventHandler AddTrackingCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HelloWorld", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld() {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        /// <remarks/>
        public void HelloWorldAsync(object userState) {
            if ((this.HelloWorldOperationCompleted == null)) {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[0], this.HelloWorldOperationCompleted, userState);
        }
        
        private void OnHelloWorldOperationCompleted(object arg) {
            if ((this.HelloWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/addChipped", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int addChipped(
                    string num, 
                    string title, 
                    string say, 
                    string launchtime, 
                    int playname, 
                    int expectnum, 
                    string choicenum, 
                    string username, 
                    int doubles, 
                    int share, 
                    int obj, 
                    int buyshare, 
                    int protect, 
                    int commisstion, 
                    int purchasing, 
                    int AtotalMoney, 
                    int Statc) {
            object[] results = this.Invoke("addChipped", new object[] {
                        num,
                        title,
                        say,
                        launchtime,
                        playname,
                        expectnum,
                        choicenum,
                        username,
                        doubles,
                        share,
                        obj,
                        buyshare,
                        protect,
                        commisstion,
                        purchasing,
                        AtotalMoney,
                        Statc});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void addChippedAsync(
                    string num, 
                    string title, 
                    string say, 
                    string launchtime, 
                    int playname, 
                    int expectnum, 
                    string choicenum, 
                    string username, 
                    int doubles, 
                    int share, 
                    int obj, 
                    int buyshare, 
                    int protect, 
                    int commisstion, 
                    int purchasing, 
                    int AtotalMoney, 
                    int Statc) {
            this.addChippedAsync(num, title, say, launchtime, playname, expectnum, choicenum, username, doubles, share, obj, buyshare, protect, commisstion, purchasing, AtotalMoney, Statc, null);
        }
        
        /// <remarks/>
        public void addChippedAsync(
                    string num, 
                    string title, 
                    string say, 
                    string launchtime, 
                    int playname, 
                    int expectnum, 
                    string choicenum, 
                    string username, 
                    int doubles, 
                    int share, 
                    int obj, 
                    int buyshare, 
                    int protect, 
                    int commisstion, 
                    int purchasing, 
                    int AtotalMoney, 
                    int Statc, 
                    object userState) {
            if ((this.addChippedOperationCompleted == null)) {
                this.addChippedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddChippedOperationCompleted);
            }
            this.InvokeAsync("addChipped", new object[] {
                        num,
                        title,
                        say,
                        launchtime,
                        playname,
                        expectnum,
                        choicenum,
                        username,
                        doubles,
                        share,
                        obj,
                        buyshare,
                        protect,
                        commisstion,
                        purchasing,
                        AtotalMoney,
                        Statc}, this.addChippedOperationCompleted, userState);
        }
        
        private void OnaddChippedOperationCompleted(object arg) {
            if ((this.addChippedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addChippedCompleted(this, new addChippedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/shareNum", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int shareNum(int num, string Qnum) {
            object[] results = this.Invoke("shareNum", new object[] {
                        num,
                        Qnum});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void shareNumAsync(int num, string Qnum) {
            this.shareNumAsync(num, Qnum, null);
        }
        
        /// <remarks/>
        public void shareNumAsync(int num, string Qnum, object userState) {
            if ((this.shareNumOperationCompleted == null)) {
                this.shareNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnshareNumOperationCompleted);
            }
            this.InvokeAsync("shareNum", new object[] {
                        num,
                        Qnum}, this.shareNumOperationCompleted, userState);
        }
        
        private void OnshareNumOperationCompleted(object arg) {
            if ((this.shareNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.shareNumCompleted(this, new shareNumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ChippedAdd", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ChippedAdd(string Qnum, int share) {
            object[] results = this.Invoke("ChippedAdd", new object[] {
                        Qnum,
                        share});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ChippedAddAsync(string Qnum, int share) {
            this.ChippedAddAsync(Qnum, share, null);
        }
        
        /// <remarks/>
        public void ChippedAddAsync(string Qnum, int share, object userState) {
            if ((this.ChippedAddOperationCompleted == null)) {
                this.ChippedAddOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChippedAddOperationCompleted);
            }
            this.InvokeAsync("ChippedAdd", new object[] {
                        Qnum,
                        share}, this.ChippedAddOperationCompleted, userState);
        }
        
        private void OnChippedAddOperationCompleted(object arg) {
            if ((this.ChippedAddCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChippedAddCompleted(this, new ChippedAddCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/username", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string username() {
            object[] results = this.Invoke("username", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void usernameAsync() {
            this.usernameAsync(null);
        }
        
        /// <remarks/>
        public void usernameAsync(object userState) {
            if ((this.usernameOperationCompleted == null)) {
                this.usernameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnusernameOperationCompleted);
            }
            this.InvokeAsync("username", new object[0], this.usernameOperationCompleted, userState);
        }
        
        private void OnusernameOperationCompleted(object arg) {
            if ((this.usernameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.usernameCompleted(this, new usernameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BindList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string BindList(int playName) {
            object[] results = this.Invoke("BindList", new object[] {
                        playName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BindListAsync(int playName) {
            this.BindListAsync(playName, null);
        }
        
        /// <remarks/>
        public void BindListAsync(int playName, object userState) {
            if ((this.BindListOperationCompleted == null)) {
                this.BindListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBindListOperationCompleted);
            }
            this.InvokeAsync("BindList", new object[] {
                        playName}, this.BindListOperationCompleted, userState);
        }
        
        private void OnBindListOperationCompleted(object arg) {
            if ((this.BindListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BindListCompleted(this, new BindListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BindList_pp", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string BindList_pp(int playName) {
            object[] results = this.Invoke("BindList_pp", new object[] {
                        playName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BindList_ppAsync(int playName) {
            this.BindList_ppAsync(playName, null);
        }
        
        /// <remarks/>
        public void BindList_ppAsync(int playName, object userState) {
            if ((this.BindList_ppOperationCompleted == null)) {
                this.BindList_ppOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBindList_ppOperationCompleted);
            }
            this.InvokeAsync("BindList_pp", new object[] {
                        playName}, this.BindList_ppOperationCompleted, userState);
        }
        
        private void OnBindList_ppOperationCompleted(object arg) {
            if ((this.BindList_ppCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BindList_ppCompleted(this, new BindList_ppCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BindList_Attention", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string BindList_Attention(int playName) {
            object[] results = this.Invoke("BindList_Attention", new object[] {
                        playName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BindList_AttentionAsync(int playName) {
            this.BindList_AttentionAsync(playName, null);
        }
        
        /// <remarks/>
        public void BindList_AttentionAsync(int playName, object userState) {
            if ((this.BindList_AttentionOperationCompleted == null)) {
                this.BindList_AttentionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBindList_AttentionOperationCompleted);
            }
            this.InvokeAsync("BindList_Attention", new object[] {
                        playName}, this.BindList_AttentionOperationCompleted, userState);
        }
        
        private void OnBindList_AttentionOperationCompleted(object arg) {
            if ((this.BindList_AttentionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BindList_AttentionCompleted(this, new BindList_AttentionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TrackingOrders", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string TrackingOrders(int playName) {
            object[] results = this.Invoke("TrackingOrders", new object[] {
                        playName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TrackingOrdersAsync(int playName) {
            this.TrackingOrdersAsync(playName, null);
        }
        
        /// <remarks/>
        public void TrackingOrdersAsync(int playName, object userState) {
            if ((this.TrackingOrdersOperationCompleted == null)) {
                this.TrackingOrdersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTrackingOrdersOperationCompleted);
            }
            this.InvokeAsync("TrackingOrders", new object[] {
                        playName}, this.TrackingOrdersOperationCompleted, userState);
        }
        
        private void OnTrackingOrdersOperationCompleted(object arg) {
            if ((this.TrackingOrdersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TrackingOrdersCompleted(this, new TrackingOrdersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/isomux", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string isomux(int ExpectNum, int playName) {
            object[] results = this.Invoke("isomux", new object[] {
                        ExpectNum,
                        playName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void isomuxAsync(int ExpectNum, int playName) {
            this.isomuxAsync(ExpectNum, playName, null);
        }
        
        /// <remarks/>
        public void isomuxAsync(int ExpectNum, int playName, object userState) {
            if ((this.isomuxOperationCompleted == null)) {
                this.isomuxOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisomuxOperationCompleted);
            }
            this.InvokeAsync("isomux", new object[] {
                        ExpectNum,
                        playName}, this.isomuxOperationCompleted, userState);
        }
        
        private void OnisomuxOperationCompleted(object arg) {
            if ((this.isomuxCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isomuxCompleted(this, new isomuxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Attention", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int Attention(string AName) {
            object[] results = this.Invoke("Attention", new object[] {
                        AName});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AttentionAsync(string AName) {
            this.AttentionAsync(AName, null);
        }
        
        /// <remarks/>
        public void AttentionAsync(string AName, object userState) {
            if ((this.AttentionOperationCompleted == null)) {
                this.AttentionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAttentionOperationCompleted);
            }
            this.InvokeAsync("Attention", new object[] {
                        AName}, this.AttentionOperationCompleted, userState);
        }
        
        private void OnAttentionOperationCompleted(object arg) {
            if ((this.AttentionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AttentionCompleted(this, new AttentionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TrackingExc", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string TrackingExc(string name, int num, int playName) {
            object[] results = this.Invoke("TrackingExc", new object[] {
                        name,
                        num,
                        playName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TrackingExcAsync(string name, int num, int playName) {
            this.TrackingExcAsync(name, num, playName, null);
        }
        
        /// <remarks/>
        public void TrackingExcAsync(string name, int num, int playName, object userState) {
            if ((this.TrackingExcOperationCompleted == null)) {
                this.TrackingExcOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTrackingExcOperationCompleted);
            }
            this.InvokeAsync("TrackingExc", new object[] {
                        name,
                        num,
                        playName}, this.TrackingExcOperationCompleted, userState);
        }
        
        private void OnTrackingExcOperationCompleted(object arg) {
            if ((this.TrackingExcCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TrackingExcCompleted(this, new TrackingExcCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddTracking", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddTracking(string UserName, int playName, int num, string money, int TrackingExpect, string TrackingExpectNum) {
            object[] results = this.Invoke("AddTracking", new object[] {
                        UserName,
                        playName,
                        num,
                        money,
                        TrackingExpect,
                        TrackingExpectNum});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddTrackingAsync(string UserName, int playName, int num, string money, int TrackingExpect, string TrackingExpectNum) {
            this.AddTrackingAsync(UserName, playName, num, money, TrackingExpect, TrackingExpectNum, null);
        }
        
        /// <remarks/>
        public void AddTrackingAsync(string UserName, int playName, int num, string money, int TrackingExpect, string TrackingExpectNum, object userState) {
            if ((this.AddTrackingOperationCompleted == null)) {
                this.AddTrackingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddTrackingOperationCompleted);
            }
            this.InvokeAsync("AddTracking", new object[] {
                        UserName,
                        playName,
                        num,
                        money,
                        TrackingExpect,
                        TrackingExpectNum}, this.AddTrackingOperationCompleted, userState);
        }
        
        private void OnAddTrackingOperationCompleted(object arg) {
            if ((this.AddTrackingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddTrackingCompleted(this, new AddTrackingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void addChippedCompletedEventHandler(object sender, addChippedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addChippedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addChippedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void shareNumCompletedEventHandler(object sender, shareNumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class shareNumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal shareNumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void ChippedAddCompletedEventHandler(object sender, ChippedAddCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChippedAddCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChippedAddCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void usernameCompletedEventHandler(object sender, usernameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class usernameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal usernameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void BindListCompletedEventHandler(object sender, BindListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BindListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BindListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void BindList_ppCompletedEventHandler(object sender, BindList_ppCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BindList_ppCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BindList_ppCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void BindList_AttentionCompletedEventHandler(object sender, BindList_AttentionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BindList_AttentionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BindList_AttentionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void TrackingOrdersCompletedEventHandler(object sender, TrackingOrdersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TrackingOrdersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TrackingOrdersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void isomuxCompletedEventHandler(object sender, isomuxCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isomuxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal isomuxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AttentionCompletedEventHandler(object sender, AttentionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AttentionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AttentionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void TrackingExcCompletedEventHandler(object sender, TrackingExcCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TrackingExcCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TrackingExcCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddTrackingCompletedEventHandler(object sender, AddTrackingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddTrackingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddTrackingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591